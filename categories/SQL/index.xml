<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on ChavinKing</title>
    <link>https://chavinking.github.io/categories/SQL/</link>
    <description>Recent content in SQL on ChavinKing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 11 Aug 2020 01:37:56 +0800</lastBuildDate><atom:link href="https://chavinking.github.io/categories/SQL/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL开发规范与优化规则</title>
      <link>https://chavinking.github.io/post/sql/SQL%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E4%B8%8E%E4%BC%98%E5%8C%96%E8%A7%84%E5%88%99/</link>
      <pubDate>Tue, 11 Aug 2020 01:37:56 +0800</pubDate>
      
      <guid>https://chavinking.github.io/post/sql/SQL%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E4%B8%8E%E4%BC%98%E5%8C%96%E8%A7%84%E5%88%99/</guid>
      <description>​ 本文档说明优化技术主要考虑大数据环境SQL on Hadoop解决方案下的优化规则及开发规范，已尽力刨除RDBMS优化细节，且尽量不加杂关系代数</description>
    </item>
    
    <item>
      <title>基于PGSQL左连接SQL执行计划解析</title>
      <link>https://chavinking.github.io/post/sql/%E5%9F%BA%E4%BA%8EPGSQL%E5%B7%A6%E8%BF%9E%E6%8E%A5SQL%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 11 Aug 2020 01:37:56 +0800</pubDate>
      
      <guid>https://chavinking.github.io/post/sql/%E5%9F%BA%E4%BA%8EPGSQL%E5%B7%A6%E8%BF%9E%E6%8E%A5SQL%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%A7%A3%E6%9E%90/</guid>
      <description>一 示例数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 -- table employee droptableifexistsemployee;createtableemployee(empnoint,enameVARCHAR(10),jobVARCHAR(9),mgrint,hiredateDATE,saldecimal(7,2),commdecimal(7,2),deptnoint);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7888,&amp;#39;CHAVIN&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;15-03-1990&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),3000,10000,10);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7889,&amp;#39;NOPE&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;12-02-1991&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),3500,10000,20);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7369,&amp;#39;SMITH&amp;#39;,&amp;#39;CLERK&amp;#39;,7902,to_date(&amp;#39;17-12-1980&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),800,null,20);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7499,&amp;#39;ALLEN&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;20-02-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1600,300,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7521,&amp;#39;WARD&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;22-02-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1250,500,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7566,&amp;#39;JONES&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;02-04-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2975,null,40);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7654,&amp;#39;MARTIN&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;28-09-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1250,1400,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7698,&amp;#39;BLAKE&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;01-05-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2850,null,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7782,&amp;#39;CLARK&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;09-06-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2450,null,10);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7788,&amp;#39;SCOTT&amp;#39;,&amp;#39;ANALYST&amp;#39;,7566,to_date(&amp;#39;19-04-1987&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),3000,null,20);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7839,&amp;#39;KING&amp;#39;,&amp;#39;PRESIDENT&amp;#39;,null,to_date(&amp;#39;17-11-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),5000,null,10);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7844,&amp;#39;TURNER&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;08-09-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1500,0,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7876,&amp;#39;ADAMS&amp;#39;,&amp;#39;CLERK&amp;#39;,7788,to_date(&amp;#39;23-05-1987&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1100,null,20);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7900,&amp;#39;JAMES&amp;#39;,&amp;#39;CLERK&amp;#39;,7698,to_date(&amp;#39;03-12-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),950,null,30);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7902,&amp;#39;FORD&amp;#39;,&amp;#39;ANALYST&amp;#39;,7566,to_date(&amp;#39;03-12-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),3000,null,20);insertintoemployee(empno,ename,job,mgr,hiredate,sal,comm,deptno)values(7934,&amp;#39;MILLER&amp;#39;,&amp;#39;CLERK&amp;#39;,7782,to_date(&amp;#39;23-01-1982&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1300,null,10); 1 2 3 4 5 6 7 8 9 10 11 12 13 -- table department droptableifexistsdepartment;createtabledepartment(deptnoint,dnameVARCHAR(14),locVARCHAR(13));insertintodepartment(deptno,dname,loc)values(10,&amp;#39;ACCOUNTING&amp;#39;,&amp;#39;NEW YORK&amp;#39;);insertintodepartment(deptno,dname,loc)values(20,&amp;#39;RESEARCH&amp;#39;,&amp;#39;NEW YORK&amp;#39;);insertintodepartment(deptno,dname,loc)values(30,&amp;#39;SALES&amp;#39;,&amp;#39;CHICAGO&amp;#39;);insertintodepartment(deptno,dname,loc)values(40,&amp;#39;OPERATIONS&amp;#39;,&amp;#39;BOSTON&amp;#39;); 二 执行计划解析 1、SQL</description>
    </item>
    
    <item>
      <title>增量ETL (长周期指标) 优化方案</title>
      <link>https://chavinking.github.io/post/dw/%E5%A2%9E%E9%87%8FETL-%E9%95%BF%E5%91%A8%E6%9C%9F%E6%8C%87%E6%A0%87-%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 11 Aug 2020 01:37:56 +0800</pubDate>
      
      <guid>https://chavinking.github.io/post/dw/%E5%A2%9E%E9%87%8FETL-%E9%95%BF%E5%91%A8%E6%9C%9F%E6%8C%87%E6%A0%87-%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</guid>
      <description>​ 在日常数据处理过程中避免不了要计算跨长周期数据指标统计需求，常见三种场景抽象如下： pv类： 统计每个城市(过去30天)用户浏览次数； 统计每个</description>
    </item>
    
  </channel>
</rss>
